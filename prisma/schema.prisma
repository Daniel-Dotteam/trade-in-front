// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?   @db.Timestamptz()
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

enum ProductSaleType {
  FOR_SALE
  FOR_TRADE
}

model Collection {
  id           String        @id @default(cuid())
  name         String
  productTypes ProductType[]
  productSaleTypes ProductSaleType[]
}

model ProductType {
  id           String     @id @default(cuid())
  name         String
  collection   Collection @relation(fields: [collectionId], references: [id], onDelete: Cascade)
  collectionId String
  products     Product[]
}

model Product {
  id            String      @id @default(cuid())
  name          String
  price         Float
  type          ProductSaleType @default(FOR_SALE)
  productType   ProductType @relation(fields: [productTypeId], references: [id], onDelete: Cascade)
  productTypeId String
  saleOrders    Order[]     @relation("SaleOrder")
  tradeOrders   Order[]     @relation("TradeOrder")
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}

model Order {
  id                String      @id @default(cuid())
  date              DateTime    @default(now())
  customerName      String
  customerPhone     String
  status           OrderStatus @default(PENDING)
  
  // Product for sale
  saleProductId     String?
  saleProduct       Product?    @relation("SaleOrder", fields: [saleProductId], references: [id])
  
  // Product for trade
  tradeProductId    String?
  tradeProduct      Product?    @relation("TradeOrder", fields: [tradeProductId], references: [id])
}
